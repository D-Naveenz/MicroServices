// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using User_Management.Models;

#nullable disable

namespace User_Management.Migrations
{
    [DbContext(typeof(middlewaredbContext))]
    [Migration("20231105143535_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("Activatedservices", b =>
                {
                    b.Property<byte[]>("UserId")
                        .HasMaxLength(16)
                        .HasColumnType("binary(16)")
                        .HasColumnName("userId")
                        .IsFixedLength();

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("serviceId");

                    b.HasKey("UserId", "ServiceId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "ServiceId" }, "service_active_user_idx");

                    b.ToTable("activatedservices", (string)null);
                });

            modelBuilder.Entity("BillTelcoservices", b =>
                {
                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.HasKey("BillId", "ServiceId");

                    b.ToTable("BillTelcoservices");
                });

            modelBuilder.Entity("Servicebill", b =>
                {
                    b.Property<int>("BillId")
                        .HasColumnType("int")
                        .HasColumnName("billId");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int")
                        .HasColumnName("serviceId");

                    b.HasKey("BillId", "ServiceId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "ServiceId" }, "service_bill_service_idx");

                    b.ToTable("servicebill", (string)null);
                });

            modelBuilder.Entity("TelcoservicesUser", b =>
                {
                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<byte[]>("UserId")
                        .HasColumnType("binary(16)");

                    b.HasKey("ServiceId", "UserId");

                    b.ToTable("TelcoservicesUser");
                });

            modelBuilder.Entity("User_Management.Models.Auth", b =>
                {
                    b.Property<byte[]>("UserId")
                        .HasMaxLength(16)
                        .HasColumnType("binary(16)")
                        .HasColumnName("userId")
                        .IsFixedLength();

                    b.Property<string>("Password")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("password");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("longblob")
                        .HasColumnName("salt");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.ToTable("auth");
                });

            modelBuilder.Entity("User_Management.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("billId");

                    b.Property<int?>("Amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.HasKey("BillId")
                        .HasName("PRIMARY");

                    b.ToTable("bill");
                });

            modelBuilder.Entity("User_Management.Models.Billcustomer", b =>
                {
                    b.Property<byte[]>("UserId")
                        .HasMaxLength(16)
                        .HasColumnType("binary(16)")
                        .HasColumnName("userId")
                        .IsFixedLength();

                    b.Property<int>("BillId")
                        .HasColumnType("int")
                        .HasColumnName("billId");

                    b.Property<sbyte?>("Status")
                        .HasColumnType("tinyint")
                        .HasColumnName("status");

                    b.HasKey("UserId", "BillId")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "BillId" }, "bill_bill_customer_idx");

                    b.ToTable("billcustomer");
                });

            modelBuilder.Entity("User_Management.Models.Telcoservices", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("serviceId");

                    b.Property<int?>("MonthlyCharge")
                        .HasColumnType("int")
                        .HasColumnName("monthlyCharge");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("serviceName");

                    b.HasKey("ServiceId")
                        .HasName("PRIMARY");

                    b.ToTable("telcoservices");
                });

            modelBuilder.Entity("User_Management.Models.User", b =>
                {
                    b.Property<byte[]>("UserId")
                        .HasMaxLength(16)
                        .HasColumnType("binary(16)")
                        .HasColumnName("userId")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("name");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("UserName")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("userName");

                    b.HasKey("UserId")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "PhoneNumber" }, "phoneNumber_UNIQUE")
                        .IsUnique();

                    b.ToTable("user");
                });

            modelBuilder.Entity("Activatedservices", b =>
                {
                    b.HasOne("User_Management.Models.Telcoservices", null)
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("service_active_user");

                    b.HasOne("User_Management.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_activatedservices_user");
                });

            modelBuilder.Entity("Servicebill", b =>
                {
                    b.HasOne("User_Management.Models.Bill", null)
                        .WithMany()
                        .HasForeignKey("BillId")
                        .IsRequired()
                        .HasConstraintName("bill_bill_service");

                    b.HasOne("User_Management.Models.Telcoservices", null)
                        .WithMany()
                        .HasForeignKey("ServiceId")
                        .IsRequired()
                        .HasConstraintName("service_bill_service");
                });

            modelBuilder.Entity("User_Management.Models.Auth", b =>
                {
                    b.HasOne("User_Management.Models.User", "User")
                        .WithOne("Auth")
                        .HasForeignKey("User_Management.Models.Auth", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_auth_user");

                    b.Navigation("User");
                });

            modelBuilder.Entity("User_Management.Models.Billcustomer", b =>
                {
                    b.HasOne("User_Management.Models.Bill", "Bill")
                        .WithMany("Billcustomer")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("bill_bill_customer");

                    b.HasOne("User_Management.Models.User", "User")
                        .WithMany("Billcustomer")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_billcustomer_user");

                    b.Navigation("Bill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("User_Management.Models.Bill", b =>
                {
                    b.Navigation("Billcustomer");
                });

            modelBuilder.Entity("User_Management.Models.User", b =>
                {
                    b.Navigation("Auth");

                    b.Navigation("Billcustomer");
                });
#pragma warning restore 612, 618
        }
    }
}
